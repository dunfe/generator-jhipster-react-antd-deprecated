import React, { useEffect } from 'react';
import { Link, RouteComponentProps } from 'react-router-dom';
import { Button, Row, Tag, Typography, Card } from 'antd';
import { Translate, TextFormat } from 'react-jhipster';

import { APP_DATE_FORMAT } from 'app/config/constants';
import { languages } from 'app/config/translation';
import { getUser } from './user-management.reducer';
import { useAppDispatch, useAppSelector } from 'app/config/store';

const { Title } = Typography;
export const UserManagementDetail = (props: RouteComponentProps<{ login: string }>) => {
    const dispatch = useAppDispatch();

    useEffect(() => {
        dispatch(getUser(props.match.params.login));
    }, []);

    const user = useAppSelector(state => state.userManagement.user);

    return (
        <Card>
            <Title>
                <Translate contentKey="userManagement.detail.title">User</Translate> [<strong>{user.login}</strong>]
            </Title>
            <Row>
                <dl className="jh-entity-details">
                    <dt>
                        <Translate contentKey="userManagement.login">Login</Translate>
                    </dt>
                    <dd>
                        <span>{user.login}</span>&nbsp;
                        {user.activated ? (
                            <Tag color="success">
                                <Translate contentKey="userManagement.activated">Activated</Translate>
                            </Tag>
                        ) : (
                            <Tag color="danger">
                                <Translate contentKey="userManagement.deactivated">Deactivated</Translate>
                            </Tag>
                        )}
                    </dd>
                    <dt>
                        <Translate contentKey="userManagement.firstName">First Name</Translate>
                    </dt>
                    <dd>{user.firstName}</dd>
                    <dt>
                        <Translate contentKey="userManagement.lastName">Last Name</Translate>
                    </dt>
                    <dd>{user.lastName}</dd>
                    <dt>
                        <Translate contentKey="userManagement.email">Email</Translate>
                    </dt>
                    <dd>{user.email}</dd>
                    <dt>
                        <Translate contentKey="userManagement.langKey">Lang Key</Translate>
                    </dt>
                    <dd>{user.langKey ? languages[user.langKey].name : undefined}</dd>
                    <dt>
                        <Translate contentKey="userManagement.createdBy">Created By</Translate>
                    </dt>
                    <dd>{user.createdBy}</dd>
                    <dt>
                        <Translate contentKey="userManagement.createdDate">Created Date</Translate>
                    </dt>
                    <dd>
                        {user.createdDate ? (
                            <TextFormat value={user.createdDate} type="date" format={APP_DATE_FORMAT} blankOnInvalid />
                        ) : null}
                    </dd>
                    <dt>
                        <Translate contentKey="userManagement.lastModifiedBy">Last Modified By</Translate>
                    </dt>
                    <dd>{user.lastModifiedBy}</dd>
                    <dt>
                        <Translate contentKey="userManagement.lastModifiedDate">Last Modified Date</Translate>
                    </dt>
                    <dd>
                        {user.lastModifiedDate ? (
                            <TextFormat value={user.lastModifiedDate} type="date" format={APP_DATE_FORMAT} blankOnInvalid />
                        ) : null}
                    </dd>
                    <dt>
                        <Translate contentKey="userManagement.profiles">Profiles</Translate>
                    </dt>
                    <dd>
                        <ul className="list-unstyled">
                            {user.authorities
                                ? user.authorities.map((authority, i) => (
                                      <li key={`user-auth-${i}`}>
                                          <Tag color="red">{authority}</Tag>
                                      </li>
                                  ))
                                : null}
                        </ul>
                    </dd>
                </dl>
            </Row>
            <Button type="default">
                <Link to="/admin/user-management">
                    <Translate contentKey="entity.action.back">Back</Translate>
                </Link>
            </Button>
        </Card>
    );
};

export default UserManagementDetail;