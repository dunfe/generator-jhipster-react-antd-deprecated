<%#
 Copyright 2013-2021 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
import React, { useEffect } from 'react';
import { Translate, translate } from 'react-jhipster';
import { Button, Alert, Col, Row, Space, Form, Typography, Input } from 'antd';
import { toast } from 'react-toastify';

import { handlePasswordResetInit, reset } from '../password-reset.reducer';
import { useAppDispatch, useAppSelector } from 'app/config/store';

const { Title } = Typography;
export const PasswordResetInit = () => {
  const dispatch = useAppDispatch();

  useEffect(
    () => () => {
      dispatch(reset());
    },
    []
  );

  const handleValidSubmit = ({ email }) => {
    dispatch(handlePasswordResetInit(email));
  };

  const successMessage = useAppSelector(state => state.passwordReset.successMessage);

  useEffect(() => {
    if (successMessage) {
<%_ if (enableTranslation) { _%>
      toast.success(translate(successMessage));
<%_ } else { _%>
      toast.success(successMessage);
<%_ } _%>
    }
  }, [successMessage]);

    return (
      <div>
        <Row justify="center">
          <Col span="8">
            <Title>
              <Translate contentKey="reset.request.title">Reset your password</Translate>
            </Title>
            <Space direction={'vertical'}>
              <Alert
                type="warning"
                message={<Translate contentKey="reset.request.messages.info">Enter the email address you used to register</Translate>}
              />
              <Form onFinish={handleValidSubmit}>
                <Form.Item
                  name="email"
                  label={translate('global.form.email.label')}
                  rules={[
                    {
                      required: true,
                      message: translate('global.messages.validate.email.required'),
                    },
                    {
                      min: 5,
                      message: translate('global.messages.validate.email.minlength'),
                    },
                    {
                      max: 254,
                      message: translate('global.messages.validate.email.maxlength'),
                    },
                    {
                      type: 'email',
                      message: translate('global.messages.validate.email.invalid'),
                    },
                  ]}
                >
                  <Input placeholder={translate('global.form.email.placeholder')} />
                </Form.Item>
                <Form.Item>
                  <Button type="primary" htmlType="submit">
                    <Translate contentKey="reset.request.form.button">Reset password</Translate>
                  </Button>
                </Form.Item>
              </Form>
            </Space>
          </Col>
        </Row>
      </div>
    );
}

export default PasswordResetInit;
